"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[660],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>h});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},d=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=p(r),m=a,h=c["".concat(s,".").concat(m)]||c[m]||u[m]||o;return r?n.createElement(h,i(i({ref:t},d),{},{components:r})):n.createElement(h,i({ref:t},d))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},3110:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var n=r(7462),a=(r(7294),r(3905));const o={sidebar_position:2},i="Architecture",l={unversionedId:"system/architecture",id:"system/architecture",title:"Architecture",description:"blendOS has a wildly different approach to immutability from other distributions.",source:"@site/docs/system/architecture.md",sourceDirName:"system",slug:"/system/architecture",permalink:"/blend-docs/docs/system/architecture",draft:!1,editUrl:"https://github.com/blend-os/docs/tree/main/docs/system/architecture.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docSidebar",previous:{title:"System Installer",permalink:"/blend-docs/docs/system/blend_inst"},next:{title:"Graphical interfaces",permalink:"/blend-docs/docs/category/graphical-interfaces"}},s={},p=[{value:"Overlays",id:"overlays",level:2},{value:"Merge-on-boot",id:"merge-on-boot",level:2},{value:"Internals",id:"internals",level:2},{value:"Boot hooks",id:"boot-hooks",level:3},{value:"Overlayed directories",id:"overlayed-directories",level:3}],d={toc:p},c="wrapper";function u(e){let{components:t,...o}=e;return(0,a.kt)(c,(0,n.Z)({},d,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"architecture"},"Architecture"),(0,a.kt)("p",null,"blendOS has a wildly different approach to immutability from other distributions."),(0,a.kt)("h2",{id:"overlays"},"Overlays"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"overlayfs")," is used to mount empty directories on top of the root's system directories. These directories are written to during system updates and the installation of ",(0,a.kt)("strong",{parentName:"p"},"drivers"),"/",(0,a.kt)("strong",{parentName:"p"},"kernel modules"),"/",(0,a.kt)("strong",{parentName:"p"},"apps installed through pacman"),"."),(0,a.kt)("p",null,"This also prevents applications from writing to the main system root itself, which remains untouched until the next boot."),(0,a.kt)("h2",{id:"merge-on-boot"},"Merge-on-boot"),(0,a.kt)("p",null,"When booting, the user is presented with two options (aside from other operating systems and 'Advanced options')."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"GRUB Screen",src:r(8455).Z,width:"640",height:"480"})),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"First option"),": Merges the previous boot's overlay with the current filesystem, using ",(0,a.kt)("em",{parentName:"p"},"overlayfs-tools"),". It then creates a fresh new overlay in-place of the previous one."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Second option"),": Deletes the previous boot's overlay, and creates a new one, discarding changes to the root partition from the previous boot."),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Potential contribution: Any help with a user-friendly GRUB theme would be greatly appreciated!")),(0,a.kt)("h2",{id:"internals"},"Internals"),(0,a.kt)("h3",{id:"boot-hooks"},"Boot hooks"),(0,a.kt)("p",null,"The ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/blend-os/blend/blob/main/blend.hook"},"blend hook")," for ",(0,a.kt)("strong",{parentName:"p"},"mkinitcpio")," mounts all of the overlays on boot. There are plans to implement support for snapshots too, that would allow for rolling back to a known working state in the event that anything goes wrong."),(0,a.kt)("h3",{id:"overlayed-directories"},"Overlayed directories"),(0,a.kt)("p",null,"All of the overlayed directories are under ",(0,a.kt)("inlineCode",{parentName:"p"},"/.upperdir"),", on the same partition as the root partition."),(0,a.kt)("style",{jsx:!0},"\n    td {\n        text-align: center;\n        font-family: monospace;\n    }\n"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Overlays"),(0,a.kt)("th",{parentName:"tr",align:null},"System directories"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"/.upperdir/bin"),(0,a.kt)("td",{parentName:"tr",align:null},"/usr/bin")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"/.upperdir/include"),(0,a.kt)("td",{parentName:"tr",align:null},"/usr/include")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"/.upperdir/lib"),(0,a.kt)("td",{parentName:"tr",align:null},"/usr/lib")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"/.upperdir/lib32"),(0,a.kt)("td",{parentName:"tr",align:null},"/usr/lib32")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"/.upperdir/share"),(0,a.kt)("td",{parentName:"tr",align:null},"/usr/share")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"/.upperdir/src"),(0,a.kt)("td",{parentName:"tr",align:null},"/usr/src")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"/.upperdir/varlib"),(0,a.kt)("td",{parentName:"tr",align:null},"/usr/varlib")))))}u.isMDXComponent=!0},8455:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/photo_2023-05-03_11-52-42-0fd49a21858ba1d82b54c9cb784533b9.jpg"}}]);